{"mappings":";;;;s2BAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAEA,IAAIC,EAAiB,EAAQ,uBAAuB,EAAE,EAClDC,EAAY,EAAQ,qBAAqB,EAEzCC,EAAYD,EAAU,2BAA2B,EAEjDE,EAAsB,SAAqBC,EAAO,CACrD,OAAIJ,GAAkBI,GAAS,OAAOA,GAAU,UAAY,OAAO,eAAeA,EAC1E,GAEDF,EAAUE,CAAK,IAAM,oBAC7B,EAEIC,EAAoB,SAAqBD,EAAO,CACnD,OAAID,EAAoBC,CAAK,EACrB,GAEDA,IAAU,MAChB,OAAOA,GAAU,UACjB,OAAOA,EAAM,QAAW,UACxBA,EAAM,QAAU,GAChBF,EAAUE,CAAK,IAAM,kBACrBF,EAAUE,EAAM,MAAM,IAAM,mBAC9B,EAEIE,EAA6B,UAAY,CAC5C,OAAOH,EAAoB,SAAS,CACrC,EAAE,EAEFA,EAAoB,kBAAoBE,EAExCN,EAAO,QAAUO,EAA4BH,EAAsBE,IChCnE,IAAAE,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,IAAAC,EAA0B,OAAgIC,EAAAJ,EAAc,QAA/H,GAAM,CAAE,QAASK,EAAW,GAAGC,CAAO,EAAIH,EAAgBD,EAASG,IAAc,OAAYA,EAAYC","names":["require_is_arguments","__commonJSMin","exports","module","hasToStringTag","callBound","$toString","isStandardArguments","value","isLegacyArguments","supportsStandardArguments","build_exports","__export","build_default","__module","__reExport","__default","__rest"],"sourceRoot":"/","sources":["../../../../../var/www/esmd/npm/is-arguments@1.1.1/node_modules/.pnpm/is-arguments@1.1.1/node_modules/is-arguments/index.js","../../../../../var/www/esmd/npm/is-arguments@1.1.1/build.js"],"sourcesContent":["'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag \u0026\u0026 value \u0026\u0026 typeof value === 'object' \u0026\u0026 Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null \u0026\u0026\n\t\ttypeof value === 'object' \u0026\u0026\n\t\ttypeof value.length === 'number' \u0026\u0026\n\t\tvalue.length \u003e= 0 \u0026\u0026\n\t\t$toString(value) !== '[object Array]' \u0026\u0026\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","import * as __module from \"is-arguments\";const { default: __default, ...__rest } = __module;export default (__default !== undefined ? __default : __rest);export * from \"is-arguments\";"],"version":3}
