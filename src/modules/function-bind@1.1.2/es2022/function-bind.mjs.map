{"mappings":";6mBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAIA,IAAIC,EAAgB,kDAChBC,EAAQ,OAAO,UAAU,SACzBC,EAAM,KAAK,IACXC,EAAW,oBAEXC,EAAW,SAAkBC,EAAGC,EAAG,CAGnC,QAFIC,EAAM,CAAC,EAEFC,EAAI,EAAGA,EAAIH,EAAE,OAAQG,GAAK,EAC/BD,EAAIC,CAAC,EAAIH,EAAEG,CAAC,EAEhB,QAASC,EAAI,EAAGA,EAAIH,EAAE,OAAQG,GAAK,EAC/BF,EAAIE,EAAIJ,EAAE,MAAM,EAAIC,EAAEG,CAAC,EAG3B,OAAOF,CACX,EAEIG,EAAQ,SAAeC,EAASC,EAAQ,CAExC,QADIL,EAAM,CAAC,EACFC,EAAII,GAAU,EAAGH,EAAI,EAAGD,EAAIG,EAAQ,OAAQH,GAAK,EAAGC,GAAK,EAC9DF,EAAIE,CAAC,EAAIE,EAAQH,CAAC,EAEtB,OAAOD,CACX,EAEIM,EAAQ,SAAUN,EAAKO,EAAQ,CAE/B,QADIC,EAAM,GACDP,EAAI,EAAGA,EAAID,EAAI,OAAQC,GAAK,EACjCO,GAAOR,EAAIC,CAAC,EACRA,EAAI,EAAID,EAAI,SACZQ,GAAOD,GAGf,OAAOC,CACX,EAEAhB,EAAO,QAAU,SAAciB,EAAM,CACjC,IAAIC,EAAS,KACb,GAAI,OAAOA,GAAW,YAAchB,EAAM,MAAMgB,CAAM,IAAMd,EACxD,MAAM,IAAI,UAAUH,EAAgBiB,CAAM,EAyB9C,QAvBIC,EAAOR,EAAM,UAAW,CAAC,EAEzBS,EACAC,EAAS,UAAY,CACrB,GAAI,gBAAgBD,EAAO,CACvB,IAAIE,EAASJ,EAAO,MAChB,KACAb,EAASc,EAAM,SAAS,CAC5B,EACA,OAAI,OAAOG,CAAM,IAAMA,EACZA,EAEJ,IACX,CACA,OAAOJ,EAAO,MACVD,EACAZ,EAASc,EAAM,SAAS,CAC5B,CAEJ,EAEII,EAAcpB,EAAI,EAAGe,EAAO,OAASC,EAAK,MAAM,EAChDK,EAAY,CAAC,EACR,EAAI,EAAG,EAAID,EAAa,IAC7BC,EAAU,CAAC,EAAI,IAAM,EAKzB,GAFAJ,EAAQ,SAAS,SAAU,oBAAsBN,EAAMU,EAAW,GAAG,EAAI,2CAA2C,EAAEH,CAAM,EAExHH,EAAO,UAAW,CAClB,IAAIO,EAAQ,UAAiB,CAAC,EAC9BA,EAAM,UAAYP,EAAO,UACzBE,EAAM,UAAY,IAAIK,EACtBA,EAAM,UAAY,IACtB,CAEA,OAAOL,CACX,ICnFA,IAAAM,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAEA,IAAIC,EAAiB,IAErBD,EAAO,QAAU,SAAS,UAAU,MAAQC,ICJ5C,IAAAC,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,IAAAC,EAA0B,OAAiIC,EAAAJ,EAAc,QAA/H,GAAM,CAAE,QAASK,EAAW,GAAGC,CAAO,EAAIH,EAAgBD,EAASG,IAAc,OAAYA,EAAYC","names":["require_implementation","__commonJSMin","exports","module","ERROR_MESSAGE","toStr","max","funcType","concatty","a","b","arr","i","j","slicy","arrLike","offset","joiny","joiner","str","that","target","args","bound","binder","result","boundLength","boundArgs","Empty","require_function_bind","__commonJSMin","exports","module","implementation","build_exports","__export","build_default","__module","__reExport","__default","__rest"],"sourceRoot":"/","sources":["../../../../../var/www/esmd/npm/function-bind@1.1.2/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js","../../../../../var/www/esmd/npm/function-bind@1.1.2/node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js","../../../../../var/www/esmd/npm/function-bind@1.1.2/build.js"],"sourcesContent":["'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i \u003c a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j \u003c b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i \u003c arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i \u003c arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 \u003c arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i \u003c boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","import * as __module from \"function-bind\";const { default: __default, ...__rest } = __module;export default (__default !== undefined ? __default : __rest);export * from \"function-bind\";"],"version":3}
