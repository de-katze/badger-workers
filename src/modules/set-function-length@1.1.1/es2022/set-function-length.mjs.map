{"mappings":";;;;;;s2BAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAEA,IAAIC,EAAe,EAAQ,eAAe,EACtCC,EAAS,EAAQ,sBAAsB,EACvCC,EAAiB,EAAQ,0BAA0B,EAAE,EACrDC,EAAO,EAAQ,MAAM,EAErBC,EAAaJ,EAAa,aAAa,EACvCK,EAASL,EAAa,cAAc,EAExCD,EAAO,QAAU,SAA2BO,EAAIC,EAAQ,CACvD,GAAI,OAAOD,GAAO,WACjB,MAAM,IAAIF,EAAW,wBAAwB,EAE9C,GAAI,OAAOG,GAAW,UAAYA,EAAS,GAAKA,EAAS,YAAcF,EAAOE,CAAM,IAAMA,EACzF,MAAM,IAAIH,EAAW,4CAA4C,EAGlE,IAAII,EAAQ,UAAU,OAAS,GAAK,CAAC,CAAC,UAAU,CAAC,EAE7CC,EAA+B,GAC/BC,EAA2B,GAC/B,GAAI,WAAYJ,GAAMH,EAAM,CAC3B,IAAIQ,EAAOR,EAAKG,EAAI,QAAQ,EACxBK,GAAQ,CAACA,EAAK,eACjBF,EAA+B,IAE5BE,GAAQ,CAACA,EAAK,WACjBD,EAA2B,GAE7B,CAEA,OAAID,GAAgCC,GAA4B,CAACF,KAC5DN,EACHD,EAAOK,EAAI,SAAUC,EAAQ,GAAM,EAAI,EAEvCN,EAAOK,EAAI,SAAUC,CAAM,GAGtBD,CACR,ICxCA,IAAAM,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,IAAAC,EAA0B,OAAuIC,EAAAJ,EAAc,QAA/H,GAAM,CAAE,QAASK,EAAW,GAAGC,CAAO,EAAIH,EAAgBD,EAASG,IAAc,OAAYA,EAAYC","names":["require_set_function_length","__commonJSMin","exports","module","GetIntrinsic","define","hasDescriptors","gOPD","$TypeError","$floor","fn","length","loose","functionLengthIsConfigurable","functionLengthIsWritable","desc","build_exports","__export","build_default","__module","__reExport","__default","__rest"],"sourceRoot":"/","sources":["../../../../../var/www/esmd/npm/set-function-length@1.1.1/node_modules/.pnpm/set-function-length@1.1.1/node_modules/set-function-length/index.js","../../../../../var/www/esmd/npm/set-function-length@1.1.1/build.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length \u003c 0 || length \u003e 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length \u003e 2 \u0026\u0026 !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn \u0026\u0026 gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc \u0026\u0026 !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc \u0026\u0026 !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","import * as __module from \"set-function-length\";const { default: __default, ...__rest } = __module;export default (__default !== undefined ? __default : __rest);export * from \"set-function-length\";"],"version":3}
