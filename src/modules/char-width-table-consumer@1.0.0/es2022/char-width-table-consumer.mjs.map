{"mappings":";;;;;s2BAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAEA,IAAMC,EAAK,EAAQ,IAAI,EACjBC,EAAK,EAAQ,eAAe,EAC5B,CAAE,UAAAC,CAAU,EAAI,EAAQ,MAAM,EAC9BC,EAAWD,EAAUF,EAAG,QAAQ,EAEtCD,EAAO,QAAU,MAAMK,CAAuB,CAC5C,YAAYC,EAAM,CAChB,KAAK,KAAOA,EACZ,KAAK,QAAU,KAAK,QAAQ,GAAG,CACjC,CAEA,OAAO,OAAOA,EAAM,CAClB,OAAO,IAAID,EAAuBC,CAAI,CACxC,CAEA,aAAa,KAAKC,EAAM,CACtB,IAAMC,EAAO,MAAMJ,EAASG,CAAI,EAC1BD,EAAO,KAAK,MAAME,CAAI,EAC5B,OAAO,IAAIH,EAAuBC,CAAI,CACxC,CAEA,OAAO,SAASC,EAAM,CACpB,IAAMC,EAAOP,EAAG,aAAaM,CAAI,EAC3BD,EAAO,KAAK,MAAME,CAAI,EAC5B,OAAO,IAAIH,EAAuBC,CAAI,CACxC,CAEA,OAAO,cAAcG,EAAU,CAC7B,OAAOA,GAAY,IAAMA,IAAa,GACxC,CAEA,gBAAgBA,EAAU,CACxB,GAAI,KAAK,YAAY,cAAcA,CAAQ,EACzC,MAAO,GAIT,IAAMC,EAAQR,EAAG,KAAK,KAAMO,EAAU,CAAC,CAACE,CAAK,EAAGC,IAAWD,EAAQC,CAAM,EACzE,GAAIF,GAAS,EAAG,CAEd,GAAM,CAAC,CAAE,CAAEG,CAAK,EAAI,KAAK,KAAKH,CAAK,EACnC,OAAOG,CACT,KAAO,CAKL,IAAMC,EAAiB,CAACJ,EAAQ,EAC1B,CAACC,EAAOI,EAAOF,CAAK,EAAI,KAAK,KAAKC,CAAc,EACtD,OAAIL,GAAYE,GAASF,GAAYM,EAC5BF,EAEP,MAEJ,CACF,CAEA,QAAQG,EAAM,CAAE,MAAAC,EAAQ,EAAK,EAAI,CAAC,EAAG,CAInC,OAAO,MAAM,KAAKD,CAAI,EAAE,OAAO,CAACE,EAAYC,IAAS,CACnD,IAAMC,EAAY,KAAK,gBAAgBD,EAAK,YAAY,CAAC,CAAC,EAC1D,GAAIC,IAAc,OAAW,CAC3B,GAAIH,EACF,OAAOC,EAAa,KAAK,QAEzB,MAAM,MACJ,yCAAyCC,EAAK,YAAY,CAAC,CAAC,EAC9D,CAEJ,KACE,QAAOD,EAAaE,CAExB,EAAG,CAAG,CACR,CACF,IC9EA,IAAAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAEA,IAAMC,EAAyB,IAEzB,CACJ,OAAQC,EACR,KAAMC,EACN,SAAUC,CACZ,EAAIH,EAEJD,EAAO,QAAU,CACf,eAAAE,EACA,aAAAC,EACA,iBAAAC,EACA,uBAAAH,CACF,ICfA,IAAAI,EAAA,GAAAC,EAAAD,EAAA,4BAAAE,EAAA,mBAAAC,EAAA,YAAAC,EAAA,iBAAAC,EAAA,qBAAAC,IAAA,IAAAC,EAA0B,OAA6OC,EAAAR,EAAc,QAAxN,GAAM,CAAE,eAAAG,EAAe,aAAAE,EAAa,iBAAAC,EAAiB,uBAAAJ,CAAuB,EAAIK,EAAe,CAAE,QAASE,EAAW,GAAGC,CAAO,EAAIH,EAAgBH,EAASK,IAAc,OAAYA,EAAYC","names":["require_consumer","__commonJSMin","exports","module","fs","bs","promisify","readFile","CharWidthTableConsumer","data","path","json","charCode","index","lower","needle","width","candidateIndex","upper","text","guess","accumWidth","char","charWidth","require_src","__commonJSMin","exports","module","CharWidthTableConsumer","createConsumer","loadConsumer","loadConsumerSync","build_exports","__export","CharWidthTableConsumer","createConsumer","build_default","loadConsumer","loadConsumerSync","__module","__reExport","__default","__rest"],"sourceRoot":"/","sources":["../../../../../var/www/esmd/npm/char-width-table-consumer@1.0.0/node_modules/.pnpm/char-width-table-consumer@1.0.0/node_modules/char-width-table-consumer/src/consumer.js","../../../../../var/www/esmd/npm/char-width-table-consumer@1.0.0/node_modules/.pnpm/char-width-table-consumer@1.0.0/node_modules/char-width-table-consumer/src/index.js","../../../../../var/www/esmd/npm/char-width-table-consumer@1.0.0/build.js"],"sourcesContent":["'use strict'\n\nconst fs = require('fs')\nconst bs = require('binary-search')\nconst { promisify } = require('util')\nconst readFile = promisify(fs.readFile)\n\nmodule.exports = class CharWidthTableConsumer {\n  constructor(data) {\n    this.data = data\n    this.emWidth = this.widthOf('m')\n  }\n\n  static create(data) {\n    return new CharWidthTableConsumer(data)\n  }\n\n  static async load(path) {\n    const json = await readFile(path)\n    const data = JSON.parse(json)\n    return new CharWidthTableConsumer(data)\n  }\n\n  static loadSync(path) {\n    const json = fs.readFileSync(path)\n    const data = JSON.parse(json)\n    return new CharWidthTableConsumer(data)\n  }\n\n  static isControlChar(charCode) {\n    return charCode \u003c= 31 || charCode === 127\n  }\n\n  widthOfCharCode(charCode) {\n    if (this.constructor.isControlChar(charCode)) {\n      return 0.0\n    }\n\n    // https://github.com/darkskyapp/binary-search/pull/18\n    const index = bs(this.data, charCode, ([lower], needle) =\u003e lower - needle)\n    if (index \u003e= 0) {\n      // The index matches the beginning of a range.\n      const [, , width] = this.data[index]\n      return width\n    } else {\n      // The index does not match the beginning of a range, which means it\n      // should be in the preceeding range A return value of `-x` means the\n      // needle would be at `x - 1`, and we want to check the element before\n      // that.\n      const candidateIndex = -index - 2\n      const [lower, upper, width] = this.data[candidateIndex]\n      if (charCode \u003e= lower \u0026\u0026 charCode \u003c= upper) {\n        return width\n      } else {\n        return undefined\n      }\n    }\n  }\n\n  widthOf(text, { guess = true } = {}) {\n    // Array.from() will split a string into an array of strings, each of\n    // which contains a single code point.\n    // https://stackoverflow.com/a/42596897/893113\n    return Array.from(text).reduce((accumWidth, char) =\u003e {\n      const charWidth = this.widthOfCharCode(char.codePointAt(0))\n      if (charWidth === undefined) {\n        if (guess) {\n          return accumWidth + this.emWidth\n        } else {\n          throw Error(\n            `No width available for character code ${char.codePointAt(0)}`\n          )\n        }\n      } else {\n        return accumWidth + charWidth\n      }\n    }, 0.0)\n  }\n}\n","'use strict'\n\nconst CharWidthTableConsumer = require('./consumer')\n\nconst {\n  create: createConsumer,\n  load: loadConsumer,\n  loadSync: loadConsumerSync,\n} = CharWidthTableConsumer\n\nmodule.exports = {\n  createConsumer,\n  loadConsumer,\n  loadConsumerSync,\n  CharWidthTableConsumer,\n}\n","import * as __module from \"char-width-table-consumer\";export const { createConsumer,loadConsumer,loadConsumerSync,CharWidthTableConsumer } = __module;const { default: __default, ...__rest } = __module;export default (__default !== undefined ? __default : __rest);export * from \"char-width-table-consumer\";"],"version":3}
